{"version":3,"sources":["components/card/card.comp.jsx","components/card-list/card-list.comp.jsx","components/search-box/search-box.comp.jsx","App.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","useState","setMonsters","searchField","setSearchField","useEffect","fetch","then","response","json","users","filteredMonsters","filter","toLowerCase","includes","evt","target","value","console","log","nativeEvent","data","ReactDOM","render","document","getElementById"],"mappings":"yRAaeA,EAXF,SAACC,GAAD,OACX,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,YAEN,mCAAML,EAAMG,QAAQG,KAApB,OACA,kCAAKN,EAAMG,QAAQI,MAAnB,WCGWC,G,MARE,SAACR,GAAD,OACf,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCIVO,G,MATG,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OAChB,uBACEZ,UAAU,aACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCkCCG,MAlCf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOR,EAAP,KAAiBS,EAAjB,KACA,EAAsCD,mBAAS,IAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAWR,EAAYQ,QAE9B,IAEH,IAMMC,EAAmBlB,EAASmB,QAAO,SAACzB,GAAD,OACvCA,EAAQG,KAAKuB,cAAcC,SAASX,EAAYU,kBAGlD,OACE,sBAAK5B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAbtB,SAACkB,GACtBX,EAAeW,EAAIC,OAAOC,OAC1BC,QAAQC,IAAIJ,EAAIK,YAAYC,MAC5BH,QAAQC,IAAIJ,EAAIC,WAed,cAAC,EAAD,CAAUvB,SAAUkB,Q,MC9B1BW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2dd89831.chunk.js","sourcesContent":["import './card.styles.css';\r\n\r\nconst Card = (props) => (\r\n  <div className='card-container'>\r\n    <img\r\n      src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n      alt='monster'\r\n    />\r\n    <h2> {props.monster.name} </h2>\r\n    <p> {props.monster.email} </p>\r\n  </div>\r\n);\r\n\r\nexport default Card;\r\n","import Card from '../card/card.comp';\r\n\r\nimport './card-list.styles.css';\r\n\r\nconst CardList = (props) => (\r\n  <div className='card-list'>\r\n    {props.monsters.map((monster) => (\r\n      <Card key={monster.id} monster={monster} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default CardList;\r\n","import './search-box.styles.css';\r\n\r\nconst SearchBox = ({ placeholder, handleChange }) => (\r\n  <input\r\n    className='search-box'\r\n    type='search'\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n  />\r\n);\r\n\r\nexport default SearchBox;\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport CardList from './components/card-list/card-list.comp';\r\nimport SearchBox from './components/search-box/search-box.comp';\r\n\r\nfunction App() {\r\n  const [monsters, setMonsters] = useState([]);\r\n  const [searchField, setSearchField] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then((response) => response.json())\r\n      .then((users) => setMonsters(users));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onSearchChange = (evt) => {\r\n    setSearchField(evt.target.value);\r\n    console.log(evt.nativeEvent.data);\r\n    console.log(evt.target);\r\n  };\r\n\r\n  const filteredMonsters = monsters.filter((monster) =>\r\n    monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className='App'>\r\n      <h1>Monsters Rolodex</h1>\r\n      <SearchBox placeholder='search monsters' handleChange={onSearchChange} />\r\n      {/* <SearchBox\r\n        placeholder='search monsters'\r\n        handleChange={(evt) => setSearchField(evt.target.value)}\r\n      /> */}\r\n      <CardList monsters={filteredMonsters} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n/* ReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n); */\r\n\r\n"],"sourceRoot":""}